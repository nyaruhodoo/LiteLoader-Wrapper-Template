"use strict";const L=require("node:events"),I=require("node:process"),W=require("node:util");var S=(c=>(c.sendLog="NodeIQQNTWrapperSession/create/getNodeMiscService/sendLog",c.onQRCodeLoginSucceed="NodeIKernelLoginService/get/addKernelLoginListener/onQRCodeLoginSucceed",c.onRecvMsg="NodeIQQNTWrapperSession/create/getMsgService/addKernelMsgListener/onRecvMsg",c.sendMsg="NodeIQQNTWrapperSession/create/getMsgService/sendMsg",c.fetchUnitedCommendConfig="NodeIQQNTWrapperSession/create/getUnitedConfigService/fetchUnitedCommendConfig",c))(S||{});class C{constructor(i,n,l={}){this.Wrapper=i,this.Session=n,this.config=l,this.wrapperEmitter=new L.EventEmitter}logFn({argArray:i,applyRet:n,key:l}){if(!this.config.log||typeof this.config.log!="boolean"&&!this.config.log.test(l))return;const g=this.config.logDepth,s={inspect(e){return W.inspect(e,{depth:g,colors:!0})},json(e){return JSON.stringify(e,null,2)}}[this.config.logType??"inspect"];if(console.log("-----------------------------------------------"),console.log(`${l} 被调用`),i.length&&console.log("参数: ",s(i)),n instanceof Promise)console.log("返回值为 Promise，请观察后续打印内容"),n.then(e=>{console.log(`${l} 返回值: `),console.log(s(e))},e=>{console.log(`${l} 返回值: `),console.log(s(e))});else if(console.log("返回值: ",s(n)),typeof n=="object"&&n){const e=Object.getOwnPropertyNames(n);e.length&&console.log("返回值 keys: ",s(e)),console.log("原型 keys: ",s(Object.getOwnPropertyNames(Object.getPrototypeOf(n))))}}hookInstance({instance:i,rootKey:n}){return new Proxy(i,{get:(l,g,f)=>{const s=Reflect.get(i,g,f);if(typeof s!="function")return s;const e=`${n}/${g}`;return(...t)=>{if(this.config.eventBlacklist?.some(o=>typeof o=="string"?e===o:o.test(e)))return;e.endsWith("Listener")&&(t[0]=this.hookInstance({instance:t[0],rootKey:e})),t=this.config.eventInterceptors?.[e]?.(t)??t;let r=i[g](...t);if(r=this.config.eventInterceptors?.[`${e}:response`]?.({applyRet:r,params:t})??r,e.endsWith("Service")&&(r=this.hookInstance({instance:r,rootKey:e})),r instanceof Promise)r.then(o=>{const d={applyRet:o,params:t};this.wrapperEmitter.emit(e,d)},o=>{const d={applyRet:o,params:t};this.wrapperEmitter.emit(e,d)});else{const o={applyRet:r,params:t};this.wrapperEmitter.emit(e,o)}return this.logFn({argArray:t,applyRet:r,key:e}),r}}})}}const M=c=>{const{promise:i,resolve:n}=Promise.withResolvers();return p=new C(void 0,void 0,c),I.dlopen=new Proxy(I.dlopen,{apply(l,g,f){const[,s]=f,e=Reflect.apply(l,g,f);if(s.includes("wrapper.node")){const t=f[0].exports,w=new Proxy(t,{get(r,o,d){const u=Reflect.get(t,o,d);return typeof u!="function"?u:new Proxy(function(){},{get(N,h,m){const a=Reflect.get(u,h,m);return typeof a!="function"?a:new Proxy(a,{apply(Q,k,P){const v=`${o}/${h}`,y=Reflect.apply(Q,k,P);if(p?.logFn({argArray:P,applyRet:y,key:v}),typeof y!="object")return y;const R=p?.hookInstance({instance:y,rootKey:v});return v==="NodeIQQNTWrapperSession/create"&&(p.Session=R),R}})},construct(N,h,m){const a=Reflect.construct(u,h,m);return p?.logFn({key:o,applyRet:a,argArray:h}),p.hookInstance({instance:a,rootKey:o})}})}});p.Wrapper=f[0].exports=w}return e}}),p.wrapperEmitter.once(S.onQRCodeLoginSucceed,()=>{n(p)}),i};let p;(async()=>await M({log:/Service\//i,logDepth:null,eventBlacklist:[S.sendLog,/tianshu/i],eventInterceptors:{}}))();
