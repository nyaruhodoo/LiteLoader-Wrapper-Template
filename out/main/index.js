"use strict";const L=require("node:events"),N=require("node:process"),W=require("node:util");var S=(r=>(r.sendLog="NodeIQQNTWrapperSession/create/getNodeMiscService/sendLog",r.onQRCodeLoginSucceed="NodeIKernelLoginService/get/addKernelLoginListener/onQRCodeLoginSucceed",r.onRecvMsg="NodeIQQNTWrapperSession/create/getMsgService/addKernelMsgListener/onRecvMsg",r.sendMsg="NodeIQQNTWrapperSession/create/getMsgService/sendMsg",r.fetchUnitedCommendConfig="NodeIQQNTWrapperSession/create/getUnitedConfigService/fetchUnitedCommendConfig",r))(S||{});class C{constructor(s,t,c={}){this.Wrapper=s,this.Session=t,this.config=c,this.wrapperEmitter=new L.EventEmitter}logFn({argArray:s,applyRet:t,key:c}){if(!this.config.log||typeof this.config.log!="boolean"&&!this.config.log.test(c))return;const f=this.config.logDepth??2,n={inspect(e){return W.inspect(e,{depth:f,colors:!0})},json(e){return JSON.stringify(e,null,2)}}[this.config.logType??"inspect"];if(console.log("-----------------------------------------------"),console.log(`${c} 被调用`),s.length&&console.log("参数: ",n(s)),t instanceof Promise)console.log("返回值为 Promise，请观察后续打印内容"),t.then(e=>{console.log(`${c} 返回值: `),console.log(n(e))},e=>{console.log(`${c} 返回值: `),console.log(n(e))});else if(console.log("返回值: ",n(t)),typeof t=="object"&&t){const e=Object.getOwnPropertyNames(t);e.length&&console.log("返回值 keys: ",n(e)),console.log("原型 keys: ",n(Object.getOwnPropertyNames(Object.getPrototypeOf(t))))}}hookInstance({instance:s,rootKey:t}){return new Proxy(s,{get:(c,f,p)=>{const n=Reflect.get(s,f,p);if(typeof n!="function")return n;const e=`${t}/${f}`;return(...o)=>{if(this.config.eventBlacklist?.some(g=>typeof g=="string"?e===g:g.test(e)))return;e.endsWith("Listener")&&(o[0]=this.hookInstance({instance:o[0],rootKey:e})),o=this.config.eventInterceptors?.[e]?.(o)??o;let i=s[f](...o);return i=this.config.eventInterceptors?.[`${e}:response`]?.({applyRet:i,params:o})??i,e.endsWith("Service")&&(i=this.hookInstance({instance:i,rootKey:e})),this.wrapperEmitter.emit(e,{applyRet:i,params:o}),this.logFn({argArray:o,applyRet:i,key:e}),i}}})}}const M=r=>{const{promise:s,resolve:t}=Promise.withResolvers();return l=new C(void 0,void 0,r),N.dlopen=new Proxy(N.dlopen,{apply(c,f,p){const[,n]=p,e=Reflect.apply(c,f,p);if(n.includes("wrapper.node")){const o=p[0].exports,P=new Proxy(o,{get(i,g,R){const h=Reflect.get(o,g,R);return typeof h!="function"?h:new Proxy(function(){},{get(m,u,y){const d=Reflect.get(h,u,y);return typeof d!="function"?d:new Proxy(d,{apply(Q,k,w){const v=`${g}/${u}`,a=Reflect.apply(Q,k,w);if(l?.logFn({argArray:w,applyRet:a,key:v}),typeof a!="object")return a;const I=l?.hookInstance({instance:a,rootKey:v});return v==="NodeIQQNTWrapperSession/create"&&(l.Session=I),I}})},construct(m,u,y){const d=Reflect.construct(h,u,y);return l?.logFn({key:g,applyRet:d,argArray:u}),l.hookInstance({instance:d,rootKey:g})}})}});l.Wrapper=p[0].exports=P}return e}}),l.wrapperEmitter.once(S.onQRCodeLoginSucceed,()=>{t(l)}),s};let l;(async()=>await M({log:!1,eventBlacklist:[S.sendLog,/tianshu/i],eventInterceptors:{}}))();
