"use strict";const L=require("node:events"),Q=require("node:process"),M=require("node:util");var v=(n=>(n.sendLog="NodeIQQNTWrapperSession/create/getNodeMiscService/sendLog",n.onQRCodeLoginSucceed="NodeIKernelLoginService/get/addKernelLoginListener/onQRCodeLoginSucceed",n.onRecvMsg="NodeIQQNTWrapperSession/create/getMsgService/addKernelMsgListener/onRecvMsg",n.sendMsg="NodeIQQNTWrapperSession/create/getMsgService/sendMsg",n.fetchUnitedCommendConfig="NodeIQQNTWrapperSession/create/getUnitedConfigService/fetchUnitedCommendConfig",n))(v||{});class W{constructor(r,o,c={}){this.Wrapper=r,this.Session=o,this.config=c,this.wrapperEmitter=new L.EventEmitter}logFn({argArray:r,applyRet:o,key:c}){if(!this.config.log||typeof this.config.log!="boolean"&&!this.config.log.test(c))return;const p=this.config.logDepth??2,s={inspect(e){return M.inspect(e,{depth:p,colors:!0})},json(e){return JSON.stringify(e,null,2)}}[this.config.logType??"inspect"];if(console.log("-----------------------------------------------"),console.log(`${c} 被调用`),r.length&&console.log("参数: ",s(r)),o instanceof Promise)console.log("返回值为 Promise，请观察后续打印内容"),o.then(e=>{console.log(`${c} 返回值: `),console.log(s(e))},e=>{console.log(`${c} 返回值: `),console.log(s(e))});else if(console.log("返回值: ",s(o)),typeof o=="object"&&o){const e=Object.getOwnPropertyNames(o);e.length&&console.log("返回值 keys: ",s(e)),console.log("原型 keys: ",s(Object.getOwnPropertyNames(Object.getPrototypeOf(o))))}}hookInstance({instance:r,rootKey:o}){return new Proxy(r,{get:(c,p,f)=>{const s=Reflect.get(r,p,f);if(typeof s!="function")return s;const e=`${o}/${p}`;return(...t)=>{if(this.config.eventBlacklist?.some(g=>typeof g=="string"?e===g:g.test(e)))return;e.endsWith("Listener")&&(t[0]=this.hookInstance({instance:t[0],rootKey:e})),t=this.config.eventInterceptors?.[e]?.(t)??t;let i=r[p](...t);return i=this.config.eventInterceptors?.[`${e}:response`]?.({applyRet:i,params:t})??i,e.endsWith("Service")&&(i=this.hookInstance({instance:i,rootKey:e})),this.wrapperEmitter.emit(e,{applyRet:i,params:t}),this.logFn({argArray:t,applyRet:i,key:e}),i}}})}}const C=n=>{const{promise:r,resolve:o}=Promise.withResolvers();return l=new W(void 0,void 0,n),Q.dlopen=new Proxy(Q.dlopen,{apply(c,p,f){const[,s]=f,e=Reflect.apply(c,p,f);if(s.includes("wrapper.node")){const t=f[0].exports,N=new Proxy(t,{get(i,g,w){const h=Reflect.get(t,g,w);return typeof h!="function"?h:new Proxy(function(){},{get(R,u,y){const d=Reflect.get(h,u,y);return typeof d!="function"?d:new Proxy(d,{apply(m,k,I){const S=`${g}/${u}`,a=Reflect.apply(m,k,I);if(l?.logFn({argArray:I,applyRet:a,key:S}),typeof a!="object")return a;const P=l?.hookInstance({instance:a,rootKey:S});return S==="NodeIQQNTWrapperSession/create"&&(l.Session=P),P}})},construct(R,u,y){const d=Reflect.construct(h,u,y);return l?.logFn({key:g,applyRet:d,argArray:u}),l.hookInstance({instance:d,rootKey:g})}})}});l.Wrapper=f[0].exports=N}return e}}),l.wrapperEmitter.once(v.onQRCodeLoginSucceed,()=>{o(l)}),r};let l;(async()=>await C({log:!1,eventBlacklist:[v.sendLog,/tianshu/i],eventInterceptors:{"NodeIQQNTWrapperSession/create/getMsgService/sendMsg"(n){console.log(n)}}}))();
